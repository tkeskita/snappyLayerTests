FoamFile
{
    version         2;
    format          ascii;
    class           dictionary;
    object          snappyHexMeshDict;
}

castellatedMesh true;
snap            true;
addLayers       true;

geometry
{
    walls
    {
        type triSurfaceMesh;
        file "walls.stl";
        // Min Bounds = [-8.00000e-01 -8.00000e-01  0.00000e+00]
        // Max Bounds = [ 2.40000e+00  8.00000e-01  2.00000e+00]
        // Area = 2.94400e+01
    }
    walls_manifold
    {
        type triSurfaceMesh;
        file "walls_manifold.stl";
        // Min Bounds = [-2.91665e-01 -3.50289e-01 -4.39978e-05]
        // Max Bounds = [ 1.75115e+00  3.32267e-01  1.35152e+00]
        // Area = 8.72209e+00
    }
    walls_nonmanifold
    {
        type triSurfaceMesh;
        file "walls_nonmanifold.stl";
        // Min Bounds = [-1.56381e-01 -2.79974e-01  1.48975e-01]
        // Max Bounds = [ 1.55242e+00  2.68634e-01  1.12107e+00]
        // Area = 1.68600e+00
    }
}

castellatedMeshControls
{
    maxLocalCells   100000;
    maxGlobalCells  10000000;
    minRefinementCells 10;
    maxLoadUnbalance 0.1;
    nCellsBetweenLevels 4;
    locationInMesh (0.0 0.0 1.5);
    allowFreeStandingZoneFaces true;
    resolveFeatureAngle 30;
    // useLeakClosure true; // OpenFOAM.com option

    features
    (
        {
            file "walls.eMesh";
            level 0;
        }
        {
            file "walls_manifold.eMesh";
            level 0;
        }
        {
            file "walls_nonmanifold.eMesh";
            level 0;
        }

    );

    refinementSurfaces
    {
        walls
        {
            level (0 0);
            patchInfo { type patch; }
        }
        walls_manifold
        {
            level (1 1);
            patchInfo { type patch; }
        }
        walls_nonmanifold
        {
            level (1 1);
            patchInfo { type patch; }
            faceZone walls_nonmanifold;
            faceType baffle;
        }

    }

    refinementRegions
    {

    }
}

snapControls
{
    nSmoothPatch    3;
    nSmoothInternal 3; // OpenFOAM.com option
    tolerance       2.0;
    nSolveIter      30;
    nRelaxIter      5;
    nFeatureSnapIter 10;
    implicitFeatureSnap false;
    explicitFeatureSnap true;
    multiRegionFeatureSnap true;
    nFaceSplitInterval -1; // OpenFOAM.com option
}

addLayersControls
{
    // Layer sizing
    relativeSizes   true;
    expansionRatio  1.3;
    finalLayerThickness 0.3;
    minThickness    0.001;
    nGrow           0;

    // Mesh dependencies
    featureAngle    130;
    mergePatchFacesAngle 45; // OpenFOAM.com option
    layerTerminationAngle -180; // OpenFOAM.com option
    maxFaceThicknessRatio 0.5;

    // Mesh displacement iterations
    nSmoothSurfaceNormals 12; // 3 * max number of layers seems good
    nSmoothThickness 10;
    nSmoothNormals  0;
    nSmoothDisplacement 100;

    // Medial axis analysis
    minMedialAxisAngle 90;
    maxThicknessToMedialRatio 0.9;
    slipFeatureAngle 30;
    nRelaxIter      1;

    // OpenFOAM.com displacement motion solver
    // meshShrinker displacementMotionSolver;
    // solver displacementLaplacian;
    // displacementLaplacianCoeffs { diffusivity quadratic inverseDistance ("wall.*"); }

    // Mesh shrinking overall settings
    nBufferCellsNoExtrude 0;
    nLayerIter      50;
    nRelaxedIter    0;
    nOuterIter      2; // OpenFOAM.com option, half of max number of layers seems good
    additionalReporting true;

    layers
    {
        walls_manifold
        {
            nSurfaceLayers 4;
        }
        walls_nonmanifold
        {
            nSurfaceLayers 4;
        }
        walls_nonmanifold_slave
        {
            nSurfaceLayers 4;
        }

    }
}

meshQualityControls
{
    nSmoothScale    4;
    errorReduction  0.75;
    #include "meshQualityDict"
}

writeFlags      ( scalarLevels layerSets layerFields );

mergeTolerance  1e-06;
